//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.EntityClient;

namespace B2BAISERA.Models.EFServer
{
    public partial class EProcEntities : ObjectContext
    {
        public const string ConnectionString = "name=EProcEntities";
        public const string ContainerName = "EProcEntities";
    
        #region Constructors
    
        public EProcEntities()
            : base(ConnectionString, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        public EProcEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        public EProcEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<CUSTOM_TRANSACTION> CUSTOM_TRANSACTION
        {
            get { return _cUSTOM_TRANSACTION  ?? (_cUSTOM_TRANSACTION = CreateObjectSet<CUSTOM_TRANSACTION>("CUSTOM_TRANSACTION")); }
        }
        private ObjectSet<CUSTOM_TRANSACTION> _cUSTOM_TRANSACTION;
    
        public ObjectSet<CUSTOM_TRANSACTIONDATA> CUSTOM_TRANSACTIONDATA
        {
            get { return _cUSTOM_TRANSACTIONDATA  ?? (_cUSTOM_TRANSACTIONDATA = CreateObjectSet<CUSTOM_TRANSACTIONDATA>("CUSTOM_TRANSACTIONDATA")); }
        }
        private ObjectSet<CUSTOM_TRANSACTIONDATA> _cUSTOM_TRANSACTIONDATA;
    
        public ObjectSet<CUSTOM_TRANSACTIONDATADETAIL> CUSTOM_TRANSACTIONDATADETAIL
        {
            get { return _cUSTOM_TRANSACTIONDATADETAIL  ?? (_cUSTOM_TRANSACTIONDATADETAIL = CreateObjectSet<CUSTOM_TRANSACTIONDATADETAIL>("CUSTOM_TRANSACTIONDATADETAIL")); }
        }
        private ObjectSet<CUSTOM_TRANSACTIONDATADETAIL> _cUSTOM_TRANSACTIONDATADETAIL;
    
        public ObjectSet<CUSTOM_S02007_TEMP> CUSTOM_S02007_TEMP
        {
            get { return _cUSTOM_S02007_TEMP  ?? (_cUSTOM_S02007_TEMP = CreateObjectSet<CUSTOM_S02007_TEMP>("CUSTOM_S02007_TEMP")); }
        }
        private ObjectSet<CUSTOM_S02007_TEMP> _cUSTOM_S02007_TEMP;
    
        public ObjectSet<CUSTOM_LOG> CUSTOM_LOG
        {
            get { return _cUSTOM_LOG  ?? (_cUSTOM_LOG = CreateObjectSet<CUSTOM_LOG>("CUSTOM_LOG")); }
        }
        private ObjectSet<CUSTOM_LOG> _cUSTOM_LOG;
    
        public ObjectSet<CUSTOM_USER> CUSTOM_USER
        {
            get { return _cUSTOM_USER  ?? (_cUSTOM_USER = CreateObjectSet<CUSTOM_USER>("CUSTOM_USER")); }
        }
        private ObjectSet<CUSTOM_USER> _cUSTOM_USER;
    
        public ObjectSet<CUSTOM_S02007> CUSTOM_S02007
        {
            get { return _cUSTOM_S02007  ?? (_cUSTOM_S02007 = CreateObjectSet<CUSTOM_S02007>("CUSTOM_S02007")); }
        }
        private ObjectSet<CUSTOM_S02007> _cUSTOM_S02007;

        #endregion

        #region Function Imports
        public ObjectResult<Nullable<int>> sp_UpdateS02002(string pONUMBER, Nullable<double> hARGADPP_INPUT, Nullable<double> hARGAPPNUNIT_INPUT, Nullable<double> hARGABBN_INPUT, string cBUCKD, string dONUMBER, Nullable<System.DateTime> dODATE, Nullable<System.DateTime> aCTUALDATEDELIVEREDUNIT, string nOCHASIS_INPUT, string nOENGINE_INPUT, string nOFAKTUR, Nullable<System.DateTime> tGLFAKTUR, string nOPOLISI_INPUT, Nullable<System.DateTime> tGLSTNK_INPUT, string nOSERTIFIKAT, Nullable<System.DateTime> tGLSERTIFIKAT, string nOFORMULIRA, Nullable<System.DateTime> tGLFORMULIRA, string nOSERTIFIKATREGUJITIPE, Nullable<System.DateTime> dATEDELIVERYTOBRANCHORVENDOR, string nOBPKB, string kETBPKB, Nullable<System.DateTime> rEVISEDATE)
        {
    
            ObjectParameter pONUMBERParameter;
    
            if (pONUMBER != null)
            {
                pONUMBERParameter = new ObjectParameter("PONUMBER", pONUMBER);
            }
            else
            {
                pONUMBERParameter = new ObjectParameter("PONUMBER", typeof(string));
            }
    
            ObjectParameter hARGADPP_INPUTParameter;
    
            if (hARGADPP_INPUT.HasValue)
            {
                hARGADPP_INPUTParameter = new ObjectParameter("HARGADPP_INPUT", hARGADPP_INPUT);
            }
            else
            {
                hARGADPP_INPUTParameter = new ObjectParameter("HARGADPP_INPUT", typeof(double));
            }
    
            ObjectParameter hARGAPPNUNIT_INPUTParameter;
    
            if (hARGAPPNUNIT_INPUT.HasValue)
            {
                hARGAPPNUNIT_INPUTParameter = new ObjectParameter("HARGAPPNUNIT_INPUT", hARGAPPNUNIT_INPUT);
            }
            else
            {
                hARGAPPNUNIT_INPUTParameter = new ObjectParameter("HARGAPPNUNIT_INPUT", typeof(double));
            }
    
            ObjectParameter hARGABBN_INPUTParameter;
    
            if (hARGABBN_INPUT.HasValue)
            {
                hARGABBN_INPUTParameter = new ObjectParameter("HARGABBN_INPUT", hARGABBN_INPUT);
            }
            else
            {
                hARGABBN_INPUTParameter = new ObjectParameter("HARGABBN_INPUT", typeof(double));
            }
    
            ObjectParameter cBUCKDParameter;
    
            if (cBUCKD != null)
            {
                cBUCKDParameter = new ObjectParameter("CBUCKD", cBUCKD);
            }
            else
            {
                cBUCKDParameter = new ObjectParameter("CBUCKD", typeof(string));
            }
    
            ObjectParameter dONUMBERParameter;
    
            if (dONUMBER != null)
            {
                dONUMBERParameter = new ObjectParameter("DONUMBER", dONUMBER);
            }
            else
            {
                dONUMBERParameter = new ObjectParameter("DONUMBER", typeof(string));
            }
    
            ObjectParameter dODATEParameter;
    
            if (dODATE.HasValue)
            {
                dODATEParameter = new ObjectParameter("DODATE", dODATE);
            }
            else
            {
                dODATEParameter = new ObjectParameter("DODATE", typeof(System.DateTime));
            }
    
            ObjectParameter aCTUALDATEDELIVEREDUNITParameter;
    
            if (aCTUALDATEDELIVEREDUNIT.HasValue)
            {
                aCTUALDATEDELIVEREDUNITParameter = new ObjectParameter("ACTUALDATEDELIVEREDUNIT", aCTUALDATEDELIVEREDUNIT);
            }
            else
            {
                aCTUALDATEDELIVEREDUNITParameter = new ObjectParameter("ACTUALDATEDELIVEREDUNIT", typeof(System.DateTime));
            }
    
            ObjectParameter nOCHASIS_INPUTParameter;
    
            if (nOCHASIS_INPUT != null)
            {
                nOCHASIS_INPUTParameter = new ObjectParameter("NOCHASIS_INPUT", nOCHASIS_INPUT);
            }
            else
            {
                nOCHASIS_INPUTParameter = new ObjectParameter("NOCHASIS_INPUT", typeof(string));
            }
    
            ObjectParameter nOENGINE_INPUTParameter;
    
            if (nOENGINE_INPUT != null)
            {
                nOENGINE_INPUTParameter = new ObjectParameter("NOENGINE_INPUT", nOENGINE_INPUT);
            }
            else
            {
                nOENGINE_INPUTParameter = new ObjectParameter("NOENGINE_INPUT", typeof(string));
            }
    
            ObjectParameter nOFAKTURParameter;
    
            if (nOFAKTUR != null)
            {
                nOFAKTURParameter = new ObjectParameter("NOFAKTUR", nOFAKTUR);
            }
            else
            {
                nOFAKTURParameter = new ObjectParameter("NOFAKTUR", typeof(string));
            }
    
            ObjectParameter tGLFAKTURParameter;
    
            if (tGLFAKTUR.HasValue)
            {
                tGLFAKTURParameter = new ObjectParameter("TGLFAKTUR", tGLFAKTUR);
            }
            else
            {
                tGLFAKTURParameter = new ObjectParameter("TGLFAKTUR", typeof(System.DateTime));
            }
    
            ObjectParameter nOPOLISI_INPUTParameter;
    
            if (nOPOLISI_INPUT != null)
            {
                nOPOLISI_INPUTParameter = new ObjectParameter("NOPOLISI_INPUT", nOPOLISI_INPUT);
            }
            else
            {
                nOPOLISI_INPUTParameter = new ObjectParameter("NOPOLISI_INPUT", typeof(string));
            }
    
            ObjectParameter tGLSTNK_INPUTParameter;
    
            if (tGLSTNK_INPUT.HasValue)
            {
                tGLSTNK_INPUTParameter = new ObjectParameter("TGLSTNK_INPUT", tGLSTNK_INPUT);
            }
            else
            {
                tGLSTNK_INPUTParameter = new ObjectParameter("TGLSTNK_INPUT", typeof(System.DateTime));
            }
    
            ObjectParameter nOSERTIFIKATParameter;
    
            if (nOSERTIFIKAT != null)
            {
                nOSERTIFIKATParameter = new ObjectParameter("NOSERTIFIKAT", nOSERTIFIKAT);
            }
            else
            {
                nOSERTIFIKATParameter = new ObjectParameter("NOSERTIFIKAT", typeof(string));
            }
    
            ObjectParameter tGLSERTIFIKATParameter;
    
            if (tGLSERTIFIKAT.HasValue)
            {
                tGLSERTIFIKATParameter = new ObjectParameter("TGLSERTIFIKAT", tGLSERTIFIKAT);
            }
            else
            {
                tGLSERTIFIKATParameter = new ObjectParameter("TGLSERTIFIKAT", typeof(System.DateTime));
            }
    
            ObjectParameter nOFORMULIRAParameter;
    
            if (nOFORMULIRA != null)
            {
                nOFORMULIRAParameter = new ObjectParameter("NOFORMULIRA", nOFORMULIRA);
            }
            else
            {
                nOFORMULIRAParameter = new ObjectParameter("NOFORMULIRA", typeof(string));
            }
    
            ObjectParameter tGLFORMULIRAParameter;
    
            if (tGLFORMULIRA.HasValue)
            {
                tGLFORMULIRAParameter = new ObjectParameter("TGLFORMULIRA", tGLFORMULIRA);
            }
            else
            {
                tGLFORMULIRAParameter = new ObjectParameter("TGLFORMULIRA", typeof(System.DateTime));
            }
    
            ObjectParameter nOSERTIFIKATREGUJITIPEParameter;
    
            if (nOSERTIFIKATREGUJITIPE != null)
            {
                nOSERTIFIKATREGUJITIPEParameter = new ObjectParameter("NOSERTIFIKATREGUJITIPE", nOSERTIFIKATREGUJITIPE);
            }
            else
            {
                nOSERTIFIKATREGUJITIPEParameter = new ObjectParameter("NOSERTIFIKATREGUJITIPE", typeof(string));
            }
    
            ObjectParameter dATEDELIVERYTOBRANCHORVENDORParameter;
    
            if (dATEDELIVERYTOBRANCHORVENDOR.HasValue)
            {
                dATEDELIVERYTOBRANCHORVENDORParameter = new ObjectParameter("DATEDELIVERYTOBRANCHORVENDOR", dATEDELIVERYTOBRANCHORVENDOR);
            }
            else
            {
                dATEDELIVERYTOBRANCHORVENDORParameter = new ObjectParameter("DATEDELIVERYTOBRANCHORVENDOR", typeof(System.DateTime));
            }
    
            ObjectParameter nOBPKBParameter;
    
            if (nOBPKB != null)
            {
                nOBPKBParameter = new ObjectParameter("NOBPKB", nOBPKB);
            }
            else
            {
                nOBPKBParameter = new ObjectParameter("NOBPKB", typeof(string));
            }
    
            ObjectParameter kETBPKBParameter;
    
            if (kETBPKB != null)
            {
                kETBPKBParameter = new ObjectParameter("KETBPKB", kETBPKB);
            }
            else
            {
                kETBPKBParameter = new ObjectParameter("KETBPKB", typeof(string));
            }
    
            ObjectParameter rEVISEDATEParameter;
    
            if (rEVISEDATE.HasValue)
            {
                rEVISEDATEParameter = new ObjectParameter("REVISEDATE", rEVISEDATE);
            }
            else
            {
                rEVISEDATEParameter = new ObjectParameter("REVISEDATE", typeof(System.DateTime));
            }
            return base.ExecuteFunction<Nullable<int>>("sp_UpdateS02002", pONUMBERParameter, hARGADPP_INPUTParameter, hARGAPPNUNIT_INPUTParameter, hARGABBN_INPUTParameter, cBUCKDParameter, dONUMBERParameter, dODATEParameter, aCTUALDATEDELIVEREDUNITParameter, nOCHASIS_INPUTParameter, nOENGINE_INPUTParameter, nOFAKTURParameter, tGLFAKTURParameter, nOPOLISI_INPUTParameter, tGLSTNK_INPUTParameter, nOSERTIFIKATParameter, tGLSERTIFIKATParameter, nOFORMULIRAParameter, tGLFORMULIRAParameter, nOSERTIFIKATREGUJITIPEParameter, dATEDELIVERYTOBRANCHORVENDORParameter, nOBPKBParameter, kETBPKBParameter, rEVISEDATEParameter);
        }
        public ObjectResult<Nullable<int>> sp_UpdateS02008(string pONUMBER, Nullable<int> vERSIONPOSERA, Nullable<int> dATAVERSION, string sALESORDERNO, string nOCHASIS_INPUT, Nullable<System.DateTime> tGLMASUKKAROSERI)
        {
    
            ObjectParameter pONUMBERParameter;
    
            if (pONUMBER != null)
            {
                pONUMBERParameter = new ObjectParameter("PONUMBER", pONUMBER);
            }
            else
            {
                pONUMBERParameter = new ObjectParameter("PONUMBER", typeof(string));
            }
    
            ObjectParameter vERSIONPOSERAParameter;
    
            if (vERSIONPOSERA.HasValue)
            {
                vERSIONPOSERAParameter = new ObjectParameter("VERSIONPOSERA", vERSIONPOSERA);
            }
            else
            {
                vERSIONPOSERAParameter = new ObjectParameter("VERSIONPOSERA", typeof(int));
            }
    
            ObjectParameter dATAVERSIONParameter;
    
            if (dATAVERSION.HasValue)
            {
                dATAVERSIONParameter = new ObjectParameter("DATAVERSION", dATAVERSION);
            }
            else
            {
                dATAVERSIONParameter = new ObjectParameter("DATAVERSION", typeof(int));
            }
    
            ObjectParameter sALESORDERNOParameter;
    
            if (sALESORDERNO != null)
            {
                sALESORDERNOParameter = new ObjectParameter("SALESORDERNO", sALESORDERNO);
            }
            else
            {
                sALESORDERNOParameter = new ObjectParameter("SALESORDERNO", typeof(string));
            }
    
            ObjectParameter nOCHASIS_INPUTParameter;
    
            if (nOCHASIS_INPUT != null)
            {
                nOCHASIS_INPUTParameter = new ObjectParameter("NOCHASIS_INPUT", nOCHASIS_INPUT);
            }
            else
            {
                nOCHASIS_INPUTParameter = new ObjectParameter("NOCHASIS_INPUT", typeof(string));
            }
    
            ObjectParameter tGLMASUKKAROSERIParameter;
    
            if (tGLMASUKKAROSERI.HasValue)
            {
                tGLMASUKKAROSERIParameter = new ObjectParameter("TGLMASUKKAROSERI", tGLMASUKKAROSERI);
            }
            else
            {
                tGLMASUKKAROSERIParameter = new ObjectParameter("TGLMASUKKAROSERI", typeof(System.DateTime));
            }
            return base.ExecuteFunction<Nullable<int>>("sp_UpdateS02008", pONUMBERParameter, vERSIONPOSERAParameter, dATAVERSIONParameter, sALESORDERNOParameter, nOCHASIS_INPUTParameter, tGLMASUKKAROSERIParameter);
        }
        public ObjectResult<Nullable<int>> sp_UpdateS02006(string pONUMBER, string nOFAKTUR, string iNVNO, Nullable<System.DateTime> iNVDATE, string nOFAKTURPAJAK, string nOCHASIS_INPUT, Nullable<decimal> nETPRICE, string bUSINESSAREACODE, string cUSTOMERNO, string nOMORSPES, string sALESORDERNO, string sALESMANNUMBER, Nullable<int> vERSIONPOSERA, string kUITANSINOREF, Nullable<System.DateTime> kUITANSIDATEREF, Nullable<System.DateTime> dOWNLOADDATE)
        {
    
            ObjectParameter pONUMBERParameter;
    
            if (pONUMBER != null)
            {
                pONUMBERParameter = new ObjectParameter("PONUMBER", pONUMBER);
            }
            else
            {
                pONUMBERParameter = new ObjectParameter("PONUMBER", typeof(string));
            }
    
            ObjectParameter nOFAKTURParameter;
    
            if (nOFAKTUR != null)
            {
                nOFAKTURParameter = new ObjectParameter("NOFAKTUR", nOFAKTUR);
            }
            else
            {
                nOFAKTURParameter = new ObjectParameter("NOFAKTUR", typeof(string));
            }
    
            ObjectParameter iNVNOParameter;
    
            if (iNVNO != null)
            {
                iNVNOParameter = new ObjectParameter("INVNO", iNVNO);
            }
            else
            {
                iNVNOParameter = new ObjectParameter("INVNO", typeof(string));
            }
    
            ObjectParameter iNVDATEParameter;
    
            if (iNVDATE.HasValue)
            {
                iNVDATEParameter = new ObjectParameter("INVDATE", iNVDATE);
            }
            else
            {
                iNVDATEParameter = new ObjectParameter("INVDATE", typeof(System.DateTime));
            }
    
            ObjectParameter nOFAKTURPAJAKParameter;
    
            if (nOFAKTURPAJAK != null)
            {
                nOFAKTURPAJAKParameter = new ObjectParameter("NOFAKTURPAJAK", nOFAKTURPAJAK);
            }
            else
            {
                nOFAKTURPAJAKParameter = new ObjectParameter("NOFAKTURPAJAK", typeof(string));
            }
    
            ObjectParameter nOCHASIS_INPUTParameter;
    
            if (nOCHASIS_INPUT != null)
            {
                nOCHASIS_INPUTParameter = new ObjectParameter("NOCHASIS_INPUT", nOCHASIS_INPUT);
            }
            else
            {
                nOCHASIS_INPUTParameter = new ObjectParameter("NOCHASIS_INPUT", typeof(string));
            }
    
            ObjectParameter nETPRICEParameter;
    
            if (nETPRICE.HasValue)
            {
                nETPRICEParameter = new ObjectParameter("NETPRICE", nETPRICE);
            }
            else
            {
                nETPRICEParameter = new ObjectParameter("NETPRICE", typeof(decimal));
            }
    
            ObjectParameter bUSINESSAREACODEParameter;
    
            if (bUSINESSAREACODE != null)
            {
                bUSINESSAREACODEParameter = new ObjectParameter("BUSINESSAREACODE", bUSINESSAREACODE);
            }
            else
            {
                bUSINESSAREACODEParameter = new ObjectParameter("BUSINESSAREACODE", typeof(string));
            }
    
            ObjectParameter cUSTOMERNOParameter;
    
            if (cUSTOMERNO != null)
            {
                cUSTOMERNOParameter = new ObjectParameter("CUSTOMERNO", cUSTOMERNO);
            }
            else
            {
                cUSTOMERNOParameter = new ObjectParameter("CUSTOMERNO", typeof(string));
            }
    
            ObjectParameter nOMORSPESParameter;
    
            if (nOMORSPES != null)
            {
                nOMORSPESParameter = new ObjectParameter("NOMORSPES", nOMORSPES);
            }
            else
            {
                nOMORSPESParameter = new ObjectParameter("NOMORSPES", typeof(string));
            }
    
            ObjectParameter sALESORDERNOParameter;
    
            if (sALESORDERNO != null)
            {
                sALESORDERNOParameter = new ObjectParameter("SALESORDERNO", sALESORDERNO);
            }
            else
            {
                sALESORDERNOParameter = new ObjectParameter("SALESORDERNO", typeof(string));
            }
    
            ObjectParameter sALESMANNUMBERParameter;
    
            if (sALESMANNUMBER != null)
            {
                sALESMANNUMBERParameter = new ObjectParameter("SALESMANNUMBER", sALESMANNUMBER);
            }
            else
            {
                sALESMANNUMBERParameter = new ObjectParameter("SALESMANNUMBER", typeof(string));
            }
    
            ObjectParameter vERSIONPOSERAParameter;
    
            if (vERSIONPOSERA.HasValue)
            {
                vERSIONPOSERAParameter = new ObjectParameter("VERSIONPOSERA", vERSIONPOSERA);
            }
            else
            {
                vERSIONPOSERAParameter = new ObjectParameter("VERSIONPOSERA", typeof(int));
            }
    
            ObjectParameter kUITANSINOREFParameter;
    
            if (kUITANSINOREF != null)
            {
                kUITANSINOREFParameter = new ObjectParameter("KUITANSINOREF", kUITANSINOREF);
            }
            else
            {
                kUITANSINOREFParameter = new ObjectParameter("KUITANSINOREF", typeof(string));
            }
    
            ObjectParameter kUITANSIDATEREFParameter;
    
            if (kUITANSIDATEREF.HasValue)
            {
                kUITANSIDATEREFParameter = new ObjectParameter("KUITANSIDATEREF", kUITANSIDATEREF);
            }
            else
            {
                kUITANSIDATEREFParameter = new ObjectParameter("KUITANSIDATEREF", typeof(System.DateTime));
            }
    
            ObjectParameter dOWNLOADDATEParameter;
    
            if (dOWNLOADDATE.HasValue)
            {
                dOWNLOADDATEParameter = new ObjectParameter("DOWNLOADDATE", dOWNLOADDATE);
            }
            else
            {
                dOWNLOADDATEParameter = new ObjectParameter("DOWNLOADDATE", typeof(System.DateTime));
            }
            return base.ExecuteFunction<Nullable<int>>("sp_UpdateS02006", pONUMBERParameter, nOFAKTURParameter, iNVNOParameter, iNVDATEParameter, nOFAKTURPAJAKParameter, nOCHASIS_INPUTParameter, nETPRICEParameter, bUSINESSAREACODEParameter, cUSTOMERNOParameter, nOMORSPESParameter, sALESORDERNOParameter, sALESMANNUMBERParameter, vERSIONPOSERAParameter, kUITANSINOREFParameter, kUITANSIDATEREFParameter, dOWNLOADDATEParameter);
        }
        public ObjectResult<CUSTOM_S02007_TEMP> sp_SendActualReceiptInvoice()
        {
            return base.ExecuteFunction<CUSTOM_S02007_TEMP>("sp_SendActualReceiptInvoice");
        }
        public ObjectResult<string> sp_GetKodeCabangAI(string pONUMBER)
        {
    
            ObjectParameter pONUMBERParameter;
    
            if (pONUMBER != null)
            {
                pONUMBERParameter = new ObjectParameter("PONUMBER", pONUMBER);
            }
            else
            {
                pONUMBERParameter = new ObjectParameter("PONUMBER", typeof(string));
            }
            return base.ExecuteFunction<string>("sp_GetKodeCabangAI", pONUMBERParameter);
        }

        #endregion

    }
}
